ISOMORPHIC STRINGS :

PROBLEM STATEMENT:


Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.


Example 1:

Input: s = "egg", t = "add"
Output: true
Example 2:

Input: s = "foo", t = "bar"
Output: false
Example 3:

Input: s = "paper", t = "title"
Output: true
 

Constraints:

1 <= s.length <= 5 * 104
t.length == s.length
s and t consist of any valid ascii character.

SOLUTION.JAVA:

class Solution {
    public boolean isIsomorphic(String s, String t) {

       if(s.length()!=t.length())
          return false;
        if(s.equals(t))
           return true;
        Map<Character,Character>a=new HashMap<>();
        for(int i=0;i<s.length();i++)
        {
            if(a.containsKey(s.charAt(i)))
            {
               char x=(char)a.get(s.charAt(i));
               if(x!=t.charAt(i))
                 return false;
            }
            
            else
            {
               
                int br=0;
                for(Map.Entry c:a.entrySet())
                {
                    if((char)c.getValue()==t.charAt(i))
                    {
                      br=1;
                      return false;
                    }
                }
                if(br==0)
                   a.put(s.charAt(i),t.charAt(i));
                
            }
        }

        return true;
 
    }
}
