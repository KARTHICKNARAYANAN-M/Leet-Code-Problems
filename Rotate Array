ROTATE ARRAY:

PROBLEM STATEMENT :

Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

 

INPUT | OUTPUT :

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]


Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]


SOLUTION .JAVA :

class Solution {
    public int majorityElement(int[] nums) {

        for(int i=0;i<nums.length;i++)
        {
            int k=0;
            for(int j=0;j<nums.length-1-i;j++)
            {
                if(nums[j]>nums[j+1])
                {
                     int t=nums[j];
                     nums[j]=nums[j+1];
                     nums[j+1]=t;
                     k=1;
                }
            }
            if(k==0)
              break;
        }
        return nums[nums.length/2];
        
    }
}
