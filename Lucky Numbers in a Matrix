LUCKY NUMBERS IN A MATRIX:


Given an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order.

A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.


Input: matrix = [[3,7,8],[9,11,13],[15,16,17]]
Output: [15]
Explanation: 15 is the only lucky number since it is the minimum in its row and the maximum in its column.
Example 2:

Input: matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]
Output: [12]
Explanation: 12 is the only lucky number since it is the minimum in its row and the maximum in its column.


SOLUTION.JAVA

class Solution {
    public List<Integer> luckyNumbers (int[][] m) {

       ArrayList<Integer>a=new ArrayList<>();
        for(int i=0;i<m.length;i++)
        {
            for(int j=0;j<m[0].length;j++)
            {
                int min=100000,max=0;
                for(int k=0;k<m[0].length;k++)
                {
                    if(min>m[i][k])
                       min=m[i][k];
                }
                for(int k=0;k<m.length;k++)
                {
                    if(max<m[k][j])
                      max=m[k][j];
                }

                if(min==max)
                   a.add(m[i][j]);
            }
           
        }
        return a;
        
    }
}
