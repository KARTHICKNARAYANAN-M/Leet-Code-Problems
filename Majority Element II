MAJORITY ELEMENT (ELEMENT THAT APPEARS MORE THAN N/3 TIMES);


PROBLEM STATEMENT :

Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.


Input: nums = [3,2,3]
Output: [3]

Input: nums = [1]
Output: [1]

Input: nums = [1,2]
Output: [1,2]

SOLUTION.JAVA :

class Solution {
    public List<Integer> majorityElement(int[] nums) {
        List<Integer> a=new ArrayList<>();
        HashMap<Integer,Integer> b=new HashMap<>();
        for(int i=0;i<nums.length;i++)
        {
            if(b.containsKey(nums[i]))
            {
                b.put(nums[i],b.get(nums[i])+1);
            }
            else
            {
                b.put(nums[i],1);
            }
        }

        for(Map.Entry m:b.entrySet())
        {
            if((int)m.getValue()>(nums.length/3))
               a.add((int)m.getKey());
        }
        return a;
    }
}

